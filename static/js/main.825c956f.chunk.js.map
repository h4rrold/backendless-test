{"version":3,"sources":["components/display/Display.js","components/display/index.js","components/button/Button.js","components/button/index.js","utils/format.js","utils/services/calculation.js","components/calculator/index.js","components/calculator/Calculator.js","utils/constants.js","App.js","index.js"],"names":["Display","props","getResult","firstOperand","secondOperand","operation","isError","className","defaultProps","Button","value","onClick","e","formatOutputValue","isNaN","parseFloat","toLocaleString","useGrouping","maximumFractionDigits","formatNumer","num","String","performCalculation","errCallback","curOper","prevOper","includes","Calculator","useState","setIsError","setFirstOperand","setSecondOperand","setOperation","handleNumButtonClick","_","second","length","handleOperationClick","result","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.825c956f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Display.scss';\n\nexport const Display = (props) => {\n  const { getResult, firstOperand, secondOperand, operation, isError } = props;\n\n  return (\n    <div className=\"display calculator-display\">\n      <p className=\"display-main-line\">{`${firstOperand ?? ''} ${operation ?? ''} ${\n        secondOperand ?? ''\n      }`}</p>\n      <p className=\"display-result-line\">{isError ? 'Error' : getResult() ?? firstOperand}</p>\n    </div>\n  );\n};\n\nDisplay.propTypes = {\n  firstOperand: PropTypes.string,\n  secondOperand: PropTypes.string,\n  operation: PropTypes.string,\n  isError: PropTypes.bool,\n  getResult: PropTypes.func\n};\n\nDisplay.defaultProps = {\n  getResult: () => '0',\n  isError: false,\n  firstOperand: '0',\n  secondOperand: null,\n  operation: null\n};\n","import { Display } from './Display';\n\nexport default Display;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\n\nexport const Button = (props) => {\n  const { value, onClick, className } = props;\n\n  return (\n    <button\n      onClick={(e) => onClick(e, value)}\n      className={`button calclulator-button ${className ? className : ''}`}\n    >\n      {value}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  value: PropTypes.string,\n  onClick: PropTypes.func,\n  className: PropTypes.oneOf(['clear', 'common', 'equal', 'operation', 'backspace'])\n};\n\nButton.defaultProps = {\n  value: '0',\n  onClick: () => ({}),\n  className: 'common'\n};\n","import { Button } from './Button';\n\nexport default Button;\n","export const formatOutputValue = (value) => {\n  return !isNaN(value)\n    ? parseFloat(value).toLocaleString('en-US', {\n        useGrouping: false,\n        maximumFractionDigits: 8\n      })\n    : null;\n};\n\nexport const formatNumer = (num) => String(parseFloat(num));\n","export const performCalculation = (firstOperand, operation, secondOperand, errCallback) => {\n  if (!firstOperand || !operation || !secondOperand) {\n    return;\n  }\n  let curOper = +firstOperand,\n    prevOper = null;\n\n  if (secondOperand.includes('%')) {\n    prevOper = (parseFloat(secondOperand) * curOper) / 100;\n  } else {\n    prevOper = +secondOperand;\n  }\n\n  switch (operation) {\n    case '+':\n      return curOper + prevOper;\n    case '-':\n      return curOper - prevOper;\n    case '*':\n      return curOper * prevOper;\n    case '/':\n      if (prevOper === 0) {\n        if (errCallback && typeof errCallback === 'function') {\n          errCallback();\n        }\n        return;\n      }\n      return curOper / prevOper;\n    default:\n      return 0;\n  }\n};\n","import { Calculator } from './Calculator';\nexport default Calculator;\n","import React, { useState } from 'react';\nimport Display from '../display';\nimport Button from '../button';\nimport { MAX_NUM_LENGTH } from '../../utils/constants';\nimport { formatOutputValue, formatNumer } from '../../utils/format';\nimport { performCalculation } from '../../utils/services/calculation';\nimport './Calculator.scss';\n\nexport const Calculator = () => {\n  const [isError, setIsError] = useState(false);\n  const [firstOperand, setFirstOperand] = useState('0');\n  const [secondOperand, setSecondOperand] = useState(null);\n  const [operation, setOperation] = useState(null);\n\n  const handleNumButtonClick = (_, num) => {\n    if (!firstOperand || !operation) {\n      firstOperand.length < MAX_NUM_LENGTH && setFirstOperand(formatNumer(firstOperand + num));\n      return;\n    }\n    if (isError) {\n      setIsError(false);\n    }\n    const second = secondOperand ?? '0';\n    if (second.length < MAX_NUM_LENGTH) {\n      setSecondOperand(formatNumer(second + num));\n    }\n  };\n\n  const handleOperationClick = (_, operation) => {\n    if (!firstOperand) {\n      return;\n    }\n    setOperation(operation);\n  };\n\n  const handleBackspaceButton = () => {\n    if (isError) {\n      setIsError(false);\n    }\n    if (secondOperand) {\n      setSecondOperand(null);\n      return;\n    }\n    if (operation) {\n      setOperation(null);\n      return;\n    }\n\n    setFirstOperand('0');\n  };\n\n  const handleClearButton = () => {\n    setOperation(null);\n    setSecondOperand(null);\n    setFirstOperand('0');\n    setIsError(false);\n  };\n\n  const handleEqualButton = () => {\n    if (isError) {\n      return;\n    }\n    if (!secondOperand && !firstOperand && !operation) {\n      return;\n    }\n    setOperation(null);\n    setSecondOperand(null);\n\n    const result = performCalculation(firstOperand, operation, secondOperand, () => {\n      setIsError(true);\n    });\n    if (result) {\n      setFirstOperand(formatOutputValue(result));\n    }\n  };\n\n  const handleDecimalButton = () => {\n    if (!secondOperand && !firstOperand.includes('.')) {\n      setFirstOperand(firstOperand + '.');\n    } else if (secondOperand && !secondOperand.includes('.')) {\n      setSecondOperand(secondOperand + '.');\n    }\n\n    if (isError) {\n      setIsError(false);\n    }\n  };\n\n  const handlePercentButton = () => {\n    if (!secondOperand) {\n      setFirstOperand(formatNumer(firstOperand / 100));\n      setOperation(null);\n      return;\n    }\n    setSecondOperand(secondOperand + '%');\n  };\n\n  return (\n    <div className=\"calculator\">\n      <Display\n        firstOperand={firstOperand}\n        secondOperand={secondOperand}\n        operation={operation}\n        getResult={() =>\n          formatOutputValue(\n            performCalculation(firstOperand, operation, secondOperand, () => {\n              setIsError(true);\n            })\n          )\n        }\n        isError={isError}\n      />\n      <div className=\"numpad\">\n        <Button value=\"AC\" className=\"clear\" onClick={handleClearButton} />\n        <Button value={null} className=\"backspace\" onClick={handleBackspaceButton} />\n        <Button value=\"%\" className=\"common\" onClick={handlePercentButton} />\n        <Button value=\"/\" className=\"operation\" onClick={handleOperationClick} />\n        <Button value=\"7\" className=\"common\" onClick={handleNumButtonClick} />\n        <Button value=\"8\" className=\"common\" onClick={handleNumButtonClick} />\n        <Button value=\"9\" className=\"common\" onClick={handleNumButtonClick} />\n        <Button value=\"*\" className=\"operation\" onClick={handleOperationClick} />\n        <Button value=\"4\" className=\"common\" onClick={handleNumButtonClick} />\n        <Button value=\"5\" className=\"common\" onClick={handleNumButtonClick} />\n        <Button value=\"6\" className=\"common\" onClick={handleNumButtonClick} />\n        <Button value=\"-\" className=\"operation\" onClick={handleOperationClick} />\n        <Button value=\"1\" className=\"common\" onClick={handleNumButtonClick} />\n        <Button value=\"2\" className=\"common\" onClick={handleNumButtonClick} />\n        <Button value=\"3\" className=\"common\" onClick={handleNumButtonClick} />\n        <Button value=\"+\" className=\"operation\" onClick={handleOperationClick} />\n        <Button value=\".\" className=\"operation\" onClick={handleDecimalButton} />\n        <Button value=\"0\" className=\"common\" onClick={handleNumButtonClick} />\n        <Button value=\"=\" className=\"equal\" onClick={handleEqualButton} />\n      </div>\n    </div>\n  );\n};\n","export const MAX_NUM_LENGTH = 8;\n","import React from 'react';\nimport Calculator from './components/calculator';\n\nexport function App() {\n  return (\n    <div className=\"calculator-wrapper\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/scss/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}